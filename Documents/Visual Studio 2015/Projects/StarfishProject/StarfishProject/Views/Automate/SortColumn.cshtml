@using StarfishProject.Helpers;
@using System.Data;
@using PagedList.Mvc;
@using PagedList;
@using System.Text;
@{
    ViewBag.Title = "SortColumn";
}


@{
    var dbs = (DatabaseSchema)ViewData["DatabaseSchema"];
}


@{
    var tbl = (Table)ViewData["TableData"];
}

@{
    var SearchElement = Session["SearchElement"] as List<SearchBox>;
    int flag = 0;
}

@*@Model IPagedList<StarfishProject.Helpers.Table>*@
@model StaticPagedList<System.Data.DataRow>
<head>

</head>
@{
    int j = 0, passfield = -1;
}
@{
    using (Html.BeginForm("Search", "Automate", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <h1>Table : @tbl.table_display_name</h1>
        @Html.ActionLink("Add", "Add", "Automate", new { TableName = tbl.table_name }, new { @class = "btn btn-primary col-md-1 col-sm-offset-11", @style = "color:white" }) <br /><br />

         <table id="table" class="table" border="1" style="align-content:center;border:groove">

            <tr class="breadcrumb">
                @foreach (var obj in tbl.columns)
                {
                    j++;
                    if (obj.column_name.Contains("password"))
                    {
                        passfield = j;
                    }
                    flag = 0;
                    <th>
                        @Html.ActionLink(obj.display_name, "SortColumn", "Automate", new { ColumnName = obj.column_name }, true)<br />

                        @if (SearchElement != null)
                        {
                            foreach (var col in SearchElement)
                            {
                                if (col.column_name == obj.column_name)
                                {
                                    <input type="text" name=@obj.column_name id=@obj.column_name value=@col.value />
                                    flag = 1;
                                    break;
                                }

                            }
                        }
                        @if (flag == 0)
                        {
                            <input type="text" name=@obj.column_name id=@obj.column_name />
                        }
                    </th>
                }
                <th>
                    @Html.ActionLink("Reset", "GetTable", "Automate", new { TableName = tbl.table_name }, new { @class = "btn btn-primary", @style = "color:white" })
                    <input class="btn btn-primary" type="submit" value="search" id="search" />
                </th>

            </tr>


            @foreach (DataRow dr in Model)
            {
                <tr>
                    @for (int i = 1; i < dr.ItemArray.Count(); i++)
                    {

                        if (i == passfield)
                        {
                            StringBuilder starstring = new StringBuilder();
                            <td>
                                @for (int k = 0; k < dr[i].ToString().Length; k++)
                                {
                                    starstring.Append("*");
                                }
                                @starstring
                            </td>
                        }
                        else
                        {
                            <td style="word-wrap:break-word;">@dr[i]</td>
                        }
                    }
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Automate", new { TableName = tbl.table_name, id = dr[0] }, null) &nbsp;
                        @Html.ActionLink("Delete", "Delete", "Automate", new { TableName = tbl.table_name, id = dr[0] }, null)
                    </td>
                </tr>
            }

        </table>
    }

}

@Html.PagedListPager(Model, page => Url.Action("SortColumn", "Automate", new { page, TableName = ViewData["Table"], ColumnName = ViewData["ColumnName"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayLinkToNextPage = PagedListDisplayMode.Always, DisplayPageCountAndCurrentLocation = true, LinkToNextPageFormat = "»", MaximumPageNumbersToDisplay = 10 })
